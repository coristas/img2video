#!/usr/bin/python2

# All the images need to be consistent in their resolutions
# before encoding.


import os, sys, random, subprocess, re, mad, fractions

FRAMES_PER_SEC = 25

def process(pics, mp3):
    allframes = mp3_length(mp3) * FRAMES_PER_SEC
    if len(pics) > allframes:
        raise RuntimeError('The number of pictures must not exceed '
                           'the target number of frames')
    framesperpic = fractions.Fraction(allframes, len(pics))
    #random.shuffle(pics)
    startframe = 0
    tmpdir = '/tmp/'+znakovi(5)
    os.mkdir(tmpdir)
    try:
        for picture in pics:
            createsymlinks(picture, int(startframe), int(startframe + framesperpic),
                           tmpdir)
            startframe += framesperpic
        encode(mp3, "blaa.avi", tmpdir)
    finally:
        print "would delete", tmpdir
        #subprocess.call(["rm", "-rf" ,tmpdir])

def mp3_length(mp3):
    return mad.MadFile(sys.argv[-1]).total_time() / 1000

# Encoding actions
def encode(mp3, outfile, tmpdir):
    subprocess.call(["ffmpeg",
                     "-r", str(FRAMES_PER_SEC),
                     "-i", tmpdir + '/frame%d.jpg', "-i", mp3,
                     "-vcodec", "ffv1","-b", "500k", "-acodec","copy",
                     outfile])


# Definitions for creating the unique temp files
def znakovi(x):
    ZNAKOVLJE = [chr(i) for i in xrange (97,122)]
    vrijednost = []
    for i in xrange(x + 1):
        vrijednost.append(random.choice(ZNAKOVLJE))
    return ''.join(vrijednost)


def createsymlinks(picture, startnumber, endnumber, tmpdir):
    crntdir = os.getcwd()
    for i in xrange(startnumber,endnumber):
        os.symlink(crntdir+'/'+picture, '%s/frame%d.jpg' % (tmpdir,i))

process(sys.argv[1:-1], sys.argv[-1])
